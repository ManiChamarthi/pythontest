from diagrams import Diagram, Cluster
from diagrams.aws.compute import Lambda
from diagrams.aws.integration import Eventbridge
from diagrams.aws.database import Dynamodb
from diagrams.aws.storage import S3
from diagrams.onprem.compute import Server
from diagrams.generic.storage import Storage
from diagrams.generic.blank import Blank
from diagrams.onprem.client import Users

with Diagram("M&A License Reporting Architecture - Horizontal Wiz Layout", show=True, direction="TB"):

    # Input Layer (Top Left)
    with Cluster("Input Layer"):
        upload_file = Storage("Upload File")
        s3_ma_data = S3("S3: M&A Data")
        lambda_rw = Lambda("Lambda: M&A_Data_R_W")
        dynamo_db = Dynamodb("DynamoDB: wiz-mna-projects")
        upload_file >> s3_ma_data >> lambda_rw >> dynamo_db

    # CMDB Integration (Below Input)
    with Cluster("ServiceNow CMDB Integration"):
        lambda_cmdb = Lambda("Lambda: fetch_CMDB_cloud_accounts")
        servicenow = Server("ServiceNow CMDB")
        lambda_cmdb >> servicenow

    # EventBridge (Middle)
    eventbridge = Eventbridge("EventBridge Rule")
    eventbridge >> lambda_cmdb  # trigger
    eventbridge >> lambda_rw    # simulate input trigger

    # Wiz Integration (Horizontal Layout)
    with Cluster("Wiz Integration (Horizontal)"):
        wiz_icon = Blank("Wiz Platform")

        wiz_lambdas = [
            Lambda("wiz_Subscriptions"),
            Lambda("EKS_on_fargate"),
            Lambda("sagemaker_domains"),
            Lambda("sagemaker_endpoints"),
            Lambda("CMDB_report"),
            Lambda("ECS_fargate"),
            Lambda("cloudrun_revisions"),
            Lambda("GKE_Autopilot"),
            Lambda("VMs_report"),
            Lambda("container_hosts"),
            Lambda("non_05_disks"),
            Lambda("non_05_disks_storing"),
            Lambda("public_buckets"),
            Lambda("registry_images"),
            Lambda("serverless_functions"),
        ]

        wiz_output = S3("S3: Wiz Information")

        # Connect horizontally: Wiz icon â†’ all Lambdas â†’ S3
        wiz_icon >> wiz_lambdas[0]
        for i in range(len(wiz_lambdas) - 1):
            wiz_lambdas[i] >> wiz_lambdas[i + 1]
        wiz_lambdas[-1] >> wiz_output

    # Report Generation
    with Cluster("License Report Generation"):
        merge_lambda = Lambda("merge_and_licenses_count")
        license_report = S3("S3: License Report")
        wiz_output >> merge_lambda
        dynamo_db >> merge_lambda
        eventbridge >> merge_lambda
        merge_lambda >> license_report

    # Email Notification (Far Right)
    with Cluster("Email Notification"):
        send_email = Lambda("send_email")
        email_user = Users("Notify via Email")
        eventbridge >> send_email
        license_report >> send_email >> email_user
