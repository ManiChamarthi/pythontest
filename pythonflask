from flask import Flask, render_template, request, redirect, url_for, send_file
import pandas as pd
import os

server = Flask(__name__)
server.config['UPLOAD_FOLDER'] = 'uploads'

@server.route('/snow', methods=['GET', 'POST'])
def index():
    if request.method == 'POST':
        # ... (uploading and reading files)

        # Retrieve mapped columns for comparison
        map_column1_file1 = request.form['map_column1_file1']
        map_column1_file2 = request.form['map_column1_file2']

        # ... (read CSV files and compare)

        # Save matched and unmatched data to separate CSV files
        matched_data_path = os.path.join(server.config['UPLOAD_FOLDER'], 'matched_data.csv')
        unmatched_data_path = os.path.join(server.config['UPLOAD_FOLDER'], 'unmatched_data.csv')
        matched.to_csv(matched_data_path, index=False)
        unmatched.to_csv(unmatched_data_path, index=False)

        return render_template('snowvr.html', options1=options1, options2=options2, success_message="Comparison completed successfully!")

    # ... (create options for column mapping dropdowns)
    columns_file1 = ['column_name_1', 'column_name_2', 'column_name_3']  # Replace with actual column names
    columns_file2 = ['column_name_a', 'column_name_b', 'column_name_c']  # Replace with actual column names
    options1 = ''.join([f'<option value="{column}">{column}</option>' for column in columns_file1])
    options2 = ''.join([f'<option value="{column}">{column}</option>' for column in columns_file2])

    return render_template('snowvr.html', options1=options1, options2=options2)

@server.route('/snow/download_matched')
def download_matched():
    return send_file(os.path.join(server.config['UPLOAD_FOLDER'], 'matched_data.csv'), as_attachment=True)

@server.route('/snow/download_unmatched')
def download_unmatched():
    return send_file(os.path.join(server.config['UPLOAD_FOLDER'], 'unmatched_data.csv'), as_attachment=True)

if __name__ == '__main__':
    server.run(debug=True)
